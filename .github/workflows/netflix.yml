name: Build, Analyze, and Scan

on:
  push:
    branches:
      - main

jobs:
  build-analyze-scan:
    name: Build, Analyze, and Scan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: SonarQube Analysis
      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Step 3: Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
          trivy fs .

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Build and Push Docker Image
      - name: Build and Push Docker image
        run: |
          docker build --build-arg TMDB_V3_API_KEY=${{ secrets.TMDB_V3_API_KEY }} -t netflix .
          docker tag netflix siva3103/netflix:latest
          docker push siva3103/netflix:latest

  deploy:
    name: Deploy and Scan Image
    needs: build-analyze-scan
    runs-on: [aws-netflix]   # <-- must match your self-hosted runner label

    steps:
      # Step 6.1: Pull Docker image
      - name: Pull the Docker image
        run: docker pull siva3103/netflix:latest

      # Step 6.2: Scan image with Trivy
      - name: Trivy image scan
        run: trivy image siva3103/netflix:latest

      # Step 6.3: Run container
      - name: Run the Netflix container
        run: |
          docker stop netflix || true
          docker rm netflix || true
          docker run -d --name netflix -p 8081:80 siva3103/netflix:latest
